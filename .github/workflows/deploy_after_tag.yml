# deploy_after_tag.yml
name: "Deploy after Tag"

on:
  push:
    tags:
      - "*"

jobs:
  prepare_matrix: ##############################################################################
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}

    steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v4.5.0
        - name: Set Dynamic Matrix
          id: setmatrix
          run: |
           matrix_str=$(python utils/info2json.py deploy_matrix)
           echo "matrix=$matrix_str" >> $GITHUB_OUTPUT
           
  check_matrix: ##############################################################################
    runs-on: ubuntu-latest
    needs: prepare_matrix
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml
      - name: Check matrix definition
        run: |
          matrix='${{ needs.prepare_matrix.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml
         
  create_release_from_tag: ############################################################################
    needs: prepare_matrix
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: ${{ fromJson(needs.prepare_matrix.outputs.matrix) }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    - uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
  pypi_deploy: #####################################################################################
    needs: prepare_matrix
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: ${{ fromJson(needs.prepare_matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build
      run: |
        pip install --upgrade pip
        pip install build
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .
    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
  online_documentation_deploy: #####################################################################################
    needs: prepare_matrix
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: ${{ fromJson(needs.prepare_matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
    - name: Create the new documentation
      uses: ammaraskar/sphinx-action@master
      with:
        pre-build-command: "python -m pip install -U pip .[docs]"
        docs-folder: "docs/"
    - name: Gather tutorials
      run: |
        ls .
        ls -ltrh docs/build
        ls -ltrh docs/build/html
        cp docs/source/_tutorials/* -v docs/build/html/
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        allow_empty_commit: true
